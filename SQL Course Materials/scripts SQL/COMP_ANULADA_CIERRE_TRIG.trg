PROMPT CREATE OR REPLACE TRIGGER anamnesis.comp_anulada_cierre_trig
CREATE OR REPLACE TRIGGER anamnesis.comp_anulada_cierre_trig BEFORE INSERT OR DELETE OR UPDATE ON anamnesis.comprobante_anulada REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
  DUMMY    CHAR(1);
  V_DATOS  VARCHAR2(50);
  V_FECHA  DATE;
  V_FECHA_FACTURA DATE;
  V_ID_COMPROBANTE NUMBER(20);
  V_ORIGEN VARCHAR2(20);
  V_ID_SUCURSAL SUCURSAL.ID_SUCURSAL%TYPE;
BEGIN
  IF INSERTING THEN
     BEGIN
         IF :NEW.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :NEW.ORIGEN IN('FC', 'FP') THEN
            V_ORIGEN := 'FACTURA CLIENTE';
            SELECT Trunc(FECHA_FACTURA, 'DD'), ID_FACTURA, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM FACTURA_CLIENTE
            WHERE NRO_FACTURA = :NEW.NRO_COMPROBANTE
            AND   Trunc(FECHA_FACTURA, 'DD') = :NEW.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

         IF :NEW.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :NEW.ORIGEN IN('NC') THEN
            V_ORIGEN := 'NOTA CREDITO CLIENTE';
            SELECT Trunc(FECHA_NOTA, 'DD'), ID_NOTA_FACTURA, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM NOT_CR_FACT
            WHERE NRO_NOTA_CREDITO = :NEW.NRO_COMPROBANTE
            AND   Trunc(FECHA_NOTA, 'DD') = :NEW.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

         IF :NEW.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :NEW.ORIGEN IN('CO') THEN
            V_ORIGEN := 'FACTURA COMEDOR';
            SELECT Trunc(FECHA, 'DD'), ID_FACTURA_COMEDOR, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM FACT_COMED
            WHERE NRO_FACTURA_COMEDOR = :NEW.NRO_COMPROBANTE
            AND   Trunc(FECHA, 'DD') = :NEW.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

         IF :NEW.TIPO_COMPROBANTE = 'ORDEN DE PAGO' AND
            :NEW.ORIGEN IN('OP') THEN
            V_ORIGEN := 'ORDEN DE PAGO';
            SELECT Trunc(FECHA_ORDEN, 'DD'), ID_ORDEN, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM ORD_PAGO
            WHERE ID_ORDEN = :NEW.NRO_COMPROBANTE
            AND   Trunc(FECHA_ORDEN, 'DD') = :NEW.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('TRANS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

     EXCEPTION
         WHEN No_Data_Found THEN
              Raise_Application_Error(-20000, 'Comprobante no existe');
     END;

     IF V_FECHA IS NULL THEN
        RAISE_APPLICATION_ERROR(-20000, 'T - Fecha incorrecta');
     END IF;

     IF Trunc(V_FECHA_FACTURA, 'DD') <= Trunc(V_FECHA, 'DD') THEN
        RAISE_APPLICATION_ERROR(-20000, 'T - No se puede insertar, ultimo cierre contable '||To_Char(V_FECHA, 'DD-MM-RR')||'. Favor ver con Contabilidad');
     END IF;
     IF Trunc(V_FECHA_FACTURA, 'DD') <= V_FECHA THEN
        IF CIERRE_ID(V_ID_COMPROBANTE, V_ORIGEN) = 'NO' THEN
           RAISE_APPLICATION_ERROR(-20000, 'T - No se puede insertar, ultimo cierre administrativo '||To_Char(CIERRE_FACTURA('CLIENTE'), 'DD-MM-RR')||'. Favor ver con Gerencia Administrativa');
        END IF;
     END IF;
     IF :NEW.SUCURSAL_ID_SUCURSAL != V_ID_SUCURSAL THEN
	       RAISE_APPLICATION_ERROR(-20000,'SUCURSAL DEL USUARIO NO CORRESPONDE A LA SUCURSAL DEL COMPROBANTE');
	   END IF;
  END IF;

  IF UPDATING THEN
     BEGIN
         IF :NEW.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :NEW.ORIGEN IN('FC', 'FP') THEN
            V_ORIGEN := 'FACTURA CLIENTE';
            SELECT Trunc(FECHA_FACTURA, 'DD'), ID_FACTURA, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM FACTURA_CLIENTE
            WHERE NRO_FACTURA = :NEW.NRO_COMPROBANTE
            AND   Trunc(FECHA_FACTURA, 'DD') = :NEW.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

         IF :NEW.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :NEW.ORIGEN IN('NC') THEN
            V_ORIGEN := 'NOTA CREDITO CLIENTE';
            SELECT Trunc(FECHA_NOTA, 'DD'), ID_NOTA_FACTURA, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM NOT_CR_FACT
            WHERE NRO_NOTA_CREDITO = :NEW.NRO_COMPROBANTE
            AND   Trunc(FECHA_NOTA, 'DD') = :NEW.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

         IF :NEW.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :NEW.ORIGEN IN('CO') THEN
            V_ORIGEN := 'FACTURA COMEDOR';
            SELECT Trunc(FECHA, 'DD'), ID_FACTURA_COMEDOR, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM FACT_COMED
            WHERE NRO_FACTURA_COMEDOR = :NEW.NRO_COMPROBANTE
            AND   Trunc(FECHA, 'DD') = :NEW.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

         IF :NEW.TIPO_COMPROBANTE = 'ORDEN DE PAGO' AND
            :NEW.ORIGEN IN('OP') THEN
            V_ORIGEN := 'ORDEN DE PAGO';
            SELECT Trunc(FECHA_ORDEN, 'DD'), ID_ORDEN, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM ORD_PAGO
            WHERE ID_ORDEN = :NEW.NRO_COMPROBANTE
            AND   Trunc(FECHA_ORDEN, 'DD') = :NEW.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('TRANS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

     EXCEPTION
         WHEN No_Data_Found THEN
              Raise_Application_Error(-20000, 'Comprobante no existe');
     END;

     IF V_FECHA IS NULL THEN
        RAISE_APPLICATION_ERROR(-20000, 'T - Fecha incorrecta');
     END IF;

     IF Trunc(V_FECHA_FACTURA, 'DD') <= TRUNC(V_FECHA, 'DD') THEN
        IF IF_UPDATE(:NEW.TIPO_COMPROBANTE, :OLD.TIPO_COMPROBANTE)
           OR IF_UPDATE(:NEW.ORIGEN, :OLD.ORIGEN)
           OR IF_UPDATE(:NEW.NRO_COMPROBANTE, :OLD.NRO_COMPROBANTE)
           OR IF_UPDATE(:NEW.FECHA_GRABACION, :OLD.FECHA_GRABACION)
        THEN
           RAISE_APPLICATION_ERROR(-20000, 'T - No se puede modificar.
           Ultimo cierre contable '||To_Char(V_FECHA, 'DD-MM-RR')||'. Favor ver con Contabilidad');
        END IF;
     END IF;
     IF IF_UPDATE(:NEW.TIPO_COMPROBANTE, :OLD.TIPO_COMPROBANTE)
        OR IF_UPDATE(:NEW.ORIGEN, :OLD.ORIGEN)
        OR IF_UPDATE(:NEW.NRO_COMPROBANTE, :OLD.NRO_COMPROBANTE)
        OR IF_UPDATE(:NEW.FECHA_GRABACION, :OLD.FECHA_GRABACION)
     THEN
        IF :NEW.SUCURSAL_ID_SUCURSAL != V_ID_SUCURSAL THEN
		          RAISE_APPLICATION_ERROR(-20000,'SUCURSAL DEL USUARIO NO CORRESPONDE A LA SUCURSAL DEL COMPROBANTE');
	      END IF;
     END IF;

     IF Trunc(V_FECHA_FACTURA, 'DD') <= V_FECHA THEN
        IF IF_UPDATE(:NEW.TIPO_COMPROBANTE, :OLD.TIPO_COMPROBANTE)
           OR IF_UPDATE(:NEW.ORIGEN, :OLD.ORIGEN)
           OR IF_UPDATE(:NEW.NRO_COMPROBANTE, :OLD.NRO_COMPROBANTE)
           OR IF_UPDATE(:NEW.FECHA_GRABACION, :OLD.FECHA_GRABACION)
        THEN
           IF CIERRE_ID(V_ID_COMPROBANTE, V_ORIGEN) = 'NO' THEN
              RAISE_APPLICATION_ERROR(-20000, 'T - No se puede modificar.
              Ultimo cierre administrativo '||To_Char(CIERRE_FACTURA('CLIENTE'), 'DD-MM-RR')||'. Favor ver con Gerencia Administrativa');
           END IF;
        END IF;
     END IF;
  END IF;
  IF DELETING  THEN
     BEGIN
         IF :OLD.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :OLD.ORIGEN IN('FC', 'FP') THEN
            V_ORIGEN := 'FACTURA CLIENTE';
            SELECT Trunc(FECHA_FACTURA, 'DD'), ID_FACTURA, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM FACTURA_CLIENTE
            WHERE NRO_FACTURA = :OLD.NRO_COMPROBANTE
            AND   Trunc(FECHA_FACTURA, 'DD') = :OLD.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;


         END IF;

         IF :OLD.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :OLD.ORIGEN IN('NC') THEN
            V_ORIGEN := 'NOTA CREDITO CLIENTE';
            SELECT Trunc(FECHA_NOTA, 'DD'), ID_NOTA_FACTURA, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM NOT_CR_FACT
            WHERE NRO_NOTA_CREDITO = :OLD.NRO_COMPROBANTE
            AND   Trunc(FECHA_NOTA, 'DD') = :OLD.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

         IF :OLD.TIPO_COMPROBANTE = 'LIBRO VENTA' AND
            :OLD.ORIGEN IN('CO') THEN
            V_ORIGEN := 'FACTURA COMEDOR';
            SELECT Trunc(FECHA, 'DD'), ID_FACTURA_COMEDOR, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM FACT_COMED
            WHERE NRO_FACTURA_COMEDOR = :OLD.NRO_COMPROBANTE
            AND   Trunc(FECHA, 'DD') = :OLD.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('VENTAS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

         IF :OLD.TIPO_COMPROBANTE = 'ORDEN DE PAGO' AND
            :OLD.ORIGEN IN('OP') THEN
            V_ORIGEN := 'ORDEN DE PAGO';
            SELECT Trunc(FECHA_ORDEN, 'DD'), ID_ORDEN, SUCURSAL_ID_SUCURSAL
            INTO V_FECHA_FACTURA, V_ID_COMPROBANTE, V_ID_SUCURSAL
            FROM ORD_PAGO
            WHERE ID_ORDEN = :OLD.NRO_COMPROBANTE
            AND   Trunc(FECHA_ORDEN, 'DD') = :OLD.FECHA_COMPROBANTE
            AND   ROWNUM < 2;

            SELECT CIERRE_ASIENTO_CONT_SUC('TRANS', NULL, V_ID_SUCURSAL)
            INTO V_FECHA
            FROM DUAL;

         END IF;

     EXCEPTION
         WHEN No_Data_Found THEN
              Raise_Application_Error(-20000, 'Comprobante no existe');
     END;


     IF V_FECHA IS NULL THEN
        RAISE_APPLICATION_ERROR(-20000, 'T - Fecha incorrecta');
     END IF;

     IF Trunc(V_FECHA_FACTURA, 'DD') <= TRUNC(V_FECHA, 'DD') THEN
           RAISE_APPLICATION_ERROR(-20000, 'T - No se puede eliminar
           Ultimo cierre contable '||To_Char(V_FECHA, 'DD-MM-RR')||'. Favor ver con Contabilidad');
     END IF;
     IF Trunc(V_FECHA_FACTURA, 'DD') <= CIERRE_FACTURA('TRANSACCION') THEN
         IF CIERRE_ID(V_ID_COMPROBANTE, V_ORIGEN) = 'NO' THEN
           RAISE_APPLICATION_ERROR(-20000, 'T - No se puede eliminar
           Ultimo cierre administrativo '||To_Char(CIERRE_FACTURA('TRANSACCION'), 'DD-MM-RR')||'. Favor ver con Gerencia Administrativa Parametro 122');
         END IF;
     END IF;
     IF :NEW.SUCURSAL_ID_SUCURSAL != V_ID_SUCURSAL THEN
		     RAISE_APPLICATION_ERROR(-20000,'SUCURSAL DEL USUARIO NO CORRESPONDE A LA SUCURSAL DEL COMPROBANTE');
		 END IF;
  END IF;

  BEGIN
      SELECT '1'
      INTO DUMMY
      FROM COMP_HAB_CIERRE
      WHERE ID_COMPROBANTE = V_ID_COMPROBANTE
      AND   TIPO_COMPROBANTE = V_ORIGEN
      AND   ROWNUM < 2;

      DELETE FROM COMP_HAB_CIERRE
      WHERE ID_COMPROBANTE = V_ID_COMPROBANTE
      AND   TIPO_COMPROBANTE = V_ORIGEN;

  EXCEPTION
      WHEN No_Data_Found THEN
          NULL;
  END;
END;
/

